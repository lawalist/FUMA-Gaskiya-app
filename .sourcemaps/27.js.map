{"version":3,"sources":["../../src/pages/type-sole/ajouter-type-sole/ajouter-type-sole.ts","../../src/pages/type-sole/ajouter-type-sole/ajouter-type-sole.module.ts"],"names":[],"mappings":"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","file":"27.js","sourcesContent":["import { Component } from '@angular/core';\nimport { NavController, NavParams, ToastController, IonicPage } from 'ionic-angular';\nimport { Validators, FormBuilder } from '@angular/forms';\nimport { TranslateService } from '@ngx-translate/core';\nimport { Storage } from '@ionic/storage';\nimport { PouchdbProvider } from '../../../providers/pouchdb-provider';\nimport { Device } from '@ionic-native/device';\nimport { Sim } from '@ionic-native/sim';\n/*\n  Generated class for the AjouterTypeSole page.\n\n  See http://ionicframework.com/docs/v2/components/#navigation for more info on\n  Ionic pages and navigation.\n*/\n@IonicPage()\n@Component({\n  selector: 'page-ajouter-type-sole',\n  templateUrl: 'ajouter-type-sole.html'\n})\nexport class AjouterTypeSolePage { \n\n  typeSoleForm: any;\n  imei: any = '';\n  phonenumber: any = '';\n  allTypeSoles: any;\n\n  constructor(public sim: Sim, public device: Device, public navCtrl: NavController, public toastCtl: ToastController, public navParams: NavParams, public servicePouchdb: PouchdbProvider, public formBuilder: FormBuilder, public storage: Storage) {\n\n    let maDate = new Date();\n    let today = this.createDate(maDate.getDate(), maDate.getMonth(), maDate.getFullYear());\n  \n    this.typeSoleForm = this.formBuilder.group({\n      //_id:[''],\n      type:['type-sole'],\n      nom: ['', Validators.required], \n      description: ['',],\n      today: [today, Validators.required],\n      deviceid: [''],\n      imei: [''],\n      phonenumber: [''],\n      start: [maDate.toJSON()],\n      end: ['']\n    });\n    \n  }\n\n  createDate(jour: any, moi: any, annee: any){\n    let s = annee+'-';\n    moi += 1;\n    if(moi < 10){\n      s += '0'+moi+'-';\n    }else{\n      s += moi+'-';\n    }\n\n    if(jour < 10){\n      s += '0'+jour;\n    }else{\n      s += jour;\n    }\n    return s;\n  }\n\nionViewDidEnter() {\n    \n    this.sim.getSimInfo().then(\n      (info) => {\n        if(info.cards.length > 0){\n          info.cards.forEach((infoCard) => {\n            if(infoCard.phoneNumber){\n              this.phonenumber = infoCard.phoneNumber;\n            }\n            if(infoCard.deviceId){\n              this.imei = infoCard.deviceId;\n            }\n          })\n        }else{\n          this.phonenumber = info.phoneNumber;\n          this.imei = info.deviceId;\n        }\n\n      },\n      (err) => console.log('Unable to get sim info: ', err)\n    );\n\n      this.servicePouchdb.getPlageDocs('fuma:type-sole','fuma:type-sole:\\uffff').then((typeSoles) => {\n        if(typeSoles){\n          this.allTypeSoles = typeSoles;\n        }\n      }, err => console.log(err));\n  }\n\n\n  verifierUniqueNon(typeSole){\n    let res = 1;\n    this.allTypeSoles.forEach((ts, index) => {\n      if((typeSole.nom === ts.data.nom)){\n        res = 0;\n      }\n    });\n    return res;\n  }\n\n  ajouter(){\n    let date = new Date();\n    let typeSole = this.typeSoleForm.value;\n\n    if(this.verifierUniqueNon(typeSole) === 0){\n      alert('Le nom du type de sole doit être unique!');\n    }else{\n      typeSole.deviceid = this.device.uuid;\n      typeSole.phonenumber = this.phonenumber;\n      typeSole.imei = this.imei;\n      let id = this.servicePouchdb.generateOderId('type-sole');\n      //union._id = 'fuma'+ id;\n      typeSole.end = date.toJSON();\n\n      let typeSoleFinal: any = {};\n      typeSoleFinal._id = 'fuma'+ id;\n      typeSoleFinal.data = typeSole\n      this.servicePouchdb.createDoc(typeSoleFinal);\n    \n      let toast = this.toastCtl.create({\n        message: 'Type de sole bien enregistré!',\n        position: 'top',\n        duration: 3000\n      });\n\n      toast.present();\n      this.navCtrl.pop();\n\n    }\n\n  }\n\n  annuler(){\n    this.navCtrl.pop();\n  }\n\n}\n\n\n\n\n// WEBPACK FOOTER //\n// ./src/pages/type-sole/ajouter-type-sole/ajouter-type-sole.ts","import { NgModule } from '@angular/core';\r\nimport { IonicPageModule } from 'ionic-angular';\r\nimport { AjouterTypeSolePage } from './ajouter-type-sole';\r\n\r\n@NgModule({\r\n  declarations: [AjouterTypeSolePage],\r\n  imports: [IonicPageModule.forChild(AjouterTypeSolePage)],\r\n  exports: [AjouterTypeSolePage]\r\n})\r\nexport class AjouterTypeSolePageModule { }\r\n\n\n\n// WEBPACK FOOTER //\n// ./src/pages/type-sole/ajouter-type-sole/ajouter-type-sole.module.ts"],"sourceRoot":""}